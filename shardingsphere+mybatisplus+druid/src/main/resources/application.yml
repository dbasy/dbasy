spring:
  shardingsphere:
    datasource:
      names: test0,test1
      test0:
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://127.0.0.1:3306/schema_test0?serverTimezone=UTC&useSSL=false
        username: root
        password: 123456
        connectionTimeoutMilliseconds: 30000
        idleTimeoutMilliseconds: 60000
        maxLifetimeMilliseconds: 1800000
        maxPoolSize: 10
      test1:
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://127.0.0.1:3307/schema_test1?serverTimezone=UTC&useSSL=false
        username: root
        password: 123456
        connectionTimeoutMilliseconds: 30000
        idleTimeoutMilliseconds: 60000
        maxLifetimeMilliseconds: 1800000
        maxPoolSize: 10
    sharding:
      default-database-strategy:
        inline:
          sharding-column: user_id
          algorithm-expression: test$->{user_id % 2}
      tables:
        t_order:
          actual-data-nodes: test$->{0..1}.t_order$->{0..1}
          table-strategy:
            inline:
              sharding-column: id
              algorithm-expression: t_order$->{id % 2}
        t_order_item:
          actual-data-nodes: test$->{0..1}.t_order_item$->{0..1}
          table-strategy:
            inline:
              sharding-column: order_id
              algorithm-expression: t_order_item$->{order_id % 2}
      bindingTables:
        - t_order,t_order_item
      broadcastTables :
        - t_dict


    props:
      sql:
        show:
          true


